%si no se guarda la imagen y hay errores cambiar a un directorio de nombre mas corto
%% Limpio todo
close all;
clear all;
clc

%cargo paquetes
pkg load symbolic
pkg load control
pkg load specfun

graphics_toolkit('gnuplot');
%graphics_toolkit('qt');

%% Algunas definiciones
w0 = sqrt(1.004*10^7);
f0 = w0/(2*pi);
Q = w0/3510;
Tau = 1/w0;

%Funcion de transferencia h = s^2/(s^2 + a*s + b), a = 3510, b = 1.004*10^7

a = 3510;
b = 1.004*10^7;

s = tf('s');

s_vec = [s^2; s; 1];

h_n = [1 0 0];
h_d = [1 3510 1.004*10^7];

h = (h_n*s_vec)/(h_d*s_vec);

##syms q t
##F = q^2/(q^2 + 3510*q + 1.004*10^7);
##y = ilaplace(F, q, t);


%% -----------------Hago el Bode
[Modulo_ideal,fase_ideal,w_ideal] = bode(h);
% Bode devuelve un vector de modulo, fase y la frecuencia angular a la que calcula estos valores
Modulo_ideal_dB = 20*log10(Modulo_ideal); % Lo pasamos de modulo a decibeles
##
##figure()
##semilogx(w_ideal,Modulo_ideal_dB) % Grafico semilogaritmico, con log en el eje x
##xlabel('Pulsacion [rad/s]') % Titulo del eje x
##ylabel('|H(jw)| [dB]') % Titulo del eje y
##title('Bode de modulo transferencia ideal') % Titulo del grafico entero
##grid on % Agrega grilla para visualizar mejor
##axis([10^1 10^5 -25 5]) % Rango visible de la figura
##%close;
##print('/home/massimo/Escritorio/imaag/toolkit_gnu/bode_modulo_ideal.png');
##
##figure()
##semilogx(w_ideal,fase_ideal)
##xlabel('Pulsacion [rad/s]')
##ylabel('Arg(H(jw)) [°]')
##title('Bode de fase de transferencia ideal')
##grid on
##%close;
##print('/home/massimo/Escritorio/imaag/toolkit_gnu/bode_fase_ideal.png');

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%-------------------RESPUESTAS----------------------%%%%%%%%%%%%%%%%
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%-------------------Respuesta al escalon
##[Y_step_ideal,T_step_ideal] = step(h);
##figure()
##  plot(T_step_ideal, Y_step_ideal)
##  title('Respuesta al escalon, de transferencia ideal')
##  xlabel ('Tiempo [s]');
##  ylabel ('Tension [V]');
##  legend ('respuesta ideal ');
## grid on
##%gid minor
## %close 
##print('/home/massimo/Escritorio/imaag/toolkit_gnu/escalon_ideal.png');
 

%%--Otra forma de obtener la respuesta al escalon
%H = h
%si u = escalon entonces U = 1/s entonces Y = H*U = H/s
%Calculo con wolfram la forma general de la antitransformada de Y
%Y = s/(s^2 + a*s + b) = s/((s-p1)(s-p2)), es zp donde p1 y p2 son los polos de h;
% Linv {s/((s-a)(s-b))} = (a*e^(a*t))/(a - b) - (b*e^(b*t))/(a - b)

##z_step = (p1/(p1-p2))*e.^(p1*t) - (p2/(p1-p2))*e.^(p2*t);
##figure()
## plot(t,z_step);
## title('Respuesta al escalón, de la transferencia');
## axis([0 0.003])
  
%%-----

%%-------------------Respuesta al impulso-----------
%Como no funciona con la funcion impulse...
%Calculo con Wolfram, Matlab y "manualmente" la antitransformada de H
%H = s^2/(s^2 + 3150*s + 1.004*10^7)
%Obtengo la misma respuesta con Wolfram que  manualmente
%

%t = 0:0.0001:0.008;
t = 0:0.0001:1;
##%%--Wolfram
##zw = dirac(t) - (1755 - 735.347*i)*e.^((-1755 - 2638.18*i)*t).*((0.701314 + 0.712852*i) + e.^((5276.35*i)*t));
##
##figure()
## plot(t,zw);
## title('Wolfram');

%δ(t) - (1755 - 735.347*i)*e^((-1755 - 2638.18*i)*t)*((0.701314 + 0.712852*i) + e^((5276.35 i)*t))


%%--Matlab ---------------MAL LOS DATOS-- USE a = 3150 en lugar de 3510--------- Borrar los %%
%%figure()
%%title('Matlab')
%δ(t) - 3120*e^(-1575*t)*(cos(25*12095^(1/2)*t) + (4063*12095^(1/2)*sin(25*12095^(1/2)*t))/761985)

%%zm = -dirac(t) + 3120*e.^(-1575*t).*(cos(25*12095^(1/2)*t) - (4063*12095^(1/2)*sin(25*12095^(1/2)*t))/761985);
%en milisegundos
%t = 0:0.001:3;
%z = dirac(t/1000) - 3120*e.^(-1575*t/1000).*(cos(25*12095^(1/2)*t/1000) + (4063*12095^(1/2)*sin(25*12095^(1/2)*t/1000))/761985);

%%plot(t,zm);

%%--Manualmente
%Calculo con wolfram la forma general de la antitransformada de 
%h = s^2/(s^2 + a*s + b) = s^2/((s-p1)(s-p2)), es zp donde p1 y p2 son los polos de h;
% Linv {s^2/((s-a)(s-b))} = δ(t) + (a^2*e^(a*t))/(a - b) - (b^2*e^(b*t))/(a - b)
##
##poles = [roots(h_d)]';
##p1 = poles(1);
##p2 = poles(2);
##zp = dirac(t) + (p1^2/(p1-p2))*e.^(p1*t) - (p2^2/(p1-p2))*e.^(p2*t);
##
##figure()
## plot(t,zp);
## title('Respuesta al impulso, de transferencia ideal');
## xlabel ('Tiempo [s]');
## ylabel ('Tension [V]');
## legend ('respuesta ideal');
## axis([0 0.004]);
## grid on
## %close;
##print('/home/massimo/Escritorio/imaag/toolkit_gnu/impulso_ideal.png');

 

##------------------------  Respuesta a cuadradas:


#### 1
####  Defino una cuadrada de periodo 1/f0 y dura 5 periodos
## [cuad1,t] = gensig('SQUARE' , 10/f0 , 50/f0, 0.0001); % Periodo de la cuadrada = 10/f0, duracion de la senial 5/f0
## %Ahora busco la respuesta al filtro con esto:
## figure()
## [V_cuad1_f0_ideal,t_cuad1_f0_ideal] = lsim(h,cuad1,t);% Obtengo la respuesta a la senial 'cuad' 
##  plot(t_cuad1_f0_ideal,V_cuad1_f0_ideal,'-b')
##  hold on % Permite graficar varias curvas en la misma figura
##  plot(t,cuad1,'-r') % '-r' para definir el color rojo
##  xlabel('Tiempo [s]')
##  ylabel('Tension [V]')
##  title('Respuesta a la señal cuadrada, periodo T = 10/f0; transferencia ideal')
##  grid on
##  axis([0 0.05 -1.2 1.2])
##  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
##  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
## print('/home/massimo/Escritorio/imaag/cuadrada_0.1f0_ideal.png');
##% close
##
#### 
#### 2
####  Defino una cuadrada de periodo 1/f0 y dura 5 periodos
##
##[cuad2,t] = gensig('SQUARE' , 1/f0 , 5/f0); % Periodo de la cuadrada = 1/f0, duracion de la senial 5/f0
##%Ahora busco la respuesta al filtro con esto:
## figure()
## [V_cuad2_f0_ideal,t_cuad2_f0_ideal] = lsim(h,cuad2,t);% Obtengo la respuesta a la senial 'cuad' 
##  plot(t_cuad2_f0_ideal,V_cuad2_f0_ideal,'-b')
##  hold on % Permite graficar varias curvas en la misma figura
##  plot(t,cuad2,'-r') % '-r' para definir el color rojo
##  xlabel('Tiempo [s]')
##  ylabel('Tension [V]')
##  title('Respuesta a la cuadrada, periodo T = 1/f0; transferencia ideal')
##  grid on
##  axis([0 0.01 -1.3 1.3])
##  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
##  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
##  print('/home/massimo/Escritorio/imaag/cuadrada_f0_ideal.png');
##
##  % close

 
#### 3
####  Defino una cuadrada de periodo 1/f0 y dura 5 periodos
[cuad3,t] = gensig('SQUARE' , 1/(10*f0) , 5/f0, 0.000001); % Periodo de la cuadrada = 1/(10*f0), duracion de la senial 5/f0

 figure()
 [V_cuad3_f0_ideal,t_cuad3_f0_ideal] = lsim(h,cuad3,t);% Obtengo la respuesta a la senial 'cuad' 
  plot(t_cuad3_f0_ideal,V_cuad3_f0_ideal,'-b')
  hold on % Permite graficar varias curvas en la misma figura
  plot(t,cuad3,'-r') % '-r' para definir el color rojo
  xlabel('Tiempo [s]')
  ylabel('Tension [V]')
  title('Respuesta a la cuadrada, periodo T = 1/(10*f0); transferencia ideal')
  grid on
  axis([0 0.006 -1.2 1.2])
  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
  %print('/home/massimo/Escritorio/imaag/cuadrada_10f0_ideal.png');

%close










##---------------------------------------------------------------------------







%% -------------------------DETERMINACION DE COMPONENTES---------------------
## a = (c1 + c2 + c3)/(r2*c2*c3);
## b = 1/(r1*r2*c2*c3);
## c = 10^(-5)/(f0);
## r1 = a/(3*c*w0^2);
## r2 = 1/(b*r1*c^2);
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%-------------------NORMALIZACION-----------------------%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

cn = 19.8*10^(-9);
r1n = 5.9*10^3;
r2n = 43.2*10^3;

a_norm = (3*cn)/(r2n*cn^2);
b_norm = 1/(r1n*r2n*cn^2);
 
h_n_norm = [1 0 0];
h_d_norm = [1 a_norm b_norm];

h_norm = (h_n_norm*s_vec)/(h_d_norm*s_vec);



%%%---------------Analisis de transferencia ideal con normalizacion-------------------

%%%-----------------Hago el Bode
[Modulo_ideal_norm,fase_ideal_norm,w_ideal_norm] = bode(h_norm);

%Bode devuelve un vector de modulo, fase y la frecuencia angular a la que calcula estos valores
Modulo_ideal_dB_norm = 20*log10(Modulo_ideal_norm); % Lo pasamos de modulo a decibeles

##figure()
##semilogx(w_ideal_norm,Modulo_ideal_dB_norm) % Grafico semilogaritmico, con log en el eje x
##xlabel('Pulsacion [rad/s]') % Titulo del eje x
##ylabel('|H(jw)| [dB]') % Titulo del eje y
##title('Bode de modulo transferencia ideal con valores normalizados') % Titulo del grafico entero
##grid on % Agrega grilla para visualizar mejor
##axis([10^1 10^5 -25 5]) % Rango visible de la figura
##%print('/home/massimo/Escritorio/imaag/bode_modulo_ideal_norm.png');
##%close;

##figure()
##semilogx(w_ideal_norm,fase_ideal_norm)
##xlabel('Pulsacion [rad/s]')
##ylabel('Arg(H(jw)) [°]')
##title('Bode de fase de transferencia ideal con valores normalizados')
##grid on
##%print('/home/massimo/Escritorio/imaag/bode_fase_ideal_norm.png');
##
##%close;

## %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## %%%%%%%%%%%%-------------------RESPUESTAS----------------------%%%%%%%%%%%%%%%%
## %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

##-------------------Respuesta al escalon normalizacion
[Y_step_ideal_norm,T_step_ideal_norm] = step(h_norm);

##figure()
##  plot(T_step_ideal_norm, Y_step_ideal_norm)
##  title('Respuesta al escalon,de transferencia ideal con valores normalizados')
##  xlabel ('Tiempo [s]');
##  ylabel ('Tension [V]');
##  legend ('respuesta ideal ');
##  grid minor
##  %print('/home/massimo/Escritorio/imaag/escalon_ideal_norm.png');
##  %close 
  
## 
##  Respuesta a cuadradas:
## 1
##  Defino una cuadrada de periodo 10/f0 y dura 5 periodos
 [cuad1,t] = gensig('SQUARE' , 10/f0 , 50/f0, 0.0001); % Periodo de la cuadrada = 10/f0, duracion de la senial 5/f0
 
## Ahora busco la respuesta al filtro con esto:
##
## figure()
## [V_cuad1_f0_ideal_norm,t_cuad1_f0_ideal_norm] = lsim(h_norm,cuad1,t);% Obtengo la respuesta a la senial 'cuad' 
##  plot(t_cuad1_f0_ideal_norm,V_cuad1_f0_ideal_norm,'-b')
##  hold on % Permite graficar varias curvas en la misma figura
##  plot(t,cuad1,'-r') % '-r' para definir el color rojo
##  xlabel('Tiempo [s]')
##  ylabel('Tension [V]')
##  title('Respuesta a la señal cuadrada, periodo T = 10/f0; transferencia idealcon valores normalizados')
##  grid on
##  axis([0 0.05 -1.2 1.2])
##  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
##  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
##  %print('/home/massimo/Escritorio/imaag/cuadrada_0.1f0_ideal_norm.png');
##  %close
 
## 
## 2
##  Defino una cuadrada de periodo 1/f0 y dura 5 periodos
 [cuad2,t] = gensig('SQUARE' , 1/f0 , 5/f0); % Periodo de la cuadrada = 1/f0, duracion de la senial 5/f0

## Ahora busco la respuesta al filtro con esto:
##
## figure()
## [V_cuad2_f0_ideal_norm,t_cuad2_f0_ideal_norm] = lsim(h_norm,cuad2,t);% Obtengo la respuesta a la senial 'cuad' 
##  plot(t_cuad2_f0_ideal_norm,V_cuad2_f0_ideal_norm,'-b')
##  hold on % Permite graficar varias curvas en la misma figura
##  plot(t,cuad2,'-r') % '-r' para definir el color rojo
##  xlabel('Tiempo [s]')
##  ylabel('Tension [V]')
##  title('Respuesta a la cuadrada, periodo T = 1/f0; transferencia ideal con valores normalizados')
##  grid on
##  axis([0 0.01 -1.3 1.3])
##  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
##  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
##  %print('/home/massimo/Escritorio/imaag/cuadrada_f0_ideal_norm.png');
##  %close


## 
## 3
##  Defino una cuadrada de periodo 1/(10f0) y dura 5 periodos
[cuad3,t] = gensig('SQUARE' , 1/(10*f0) , 5/f0, 0.000001); % Periodo de la cuadrada = 1/(10*f0), duracion de la senial 5/f0

## Ahora busco la respuesta al filtro con esto:

 figure()
 [V_cuad3_f0_ideal_norm,t_cuad3_f0_ideal_norm] = lsim(h_norm,cuad3,t);% Obtengo la respuesta a la senial 'cuad' 
  plot(t_cuad3_f0_ideal_norm,V_cuad3_f0_ideal_norm,'-b')
  hold on % Permite graficar varias curvas en la misma figura
  plot(t,cuad3,'-r') % '-r' para definir el color rojo
  xlabel('Tiempo [s]')
  ylabel('Tension [V]')
  title('Respuesta a la cuadrada, periodo T = 1/(10*f0); transferencia ideal con valores normalizados')
  grid on
  axis([0 0.006 -1.2 1.2])
  legend('Respuesta','Entrada') % Agrega un cuadro aclarando que curva tiene que color (Importa el orden)
  hold off % Permite que las curvas de ahora en mas aparezcan en otras figuras
  %print('/home/massimo/Escritorio/imaag/cuadrada_10f0_ideal_norm.png');
  %close


##difff
##

 figure()
 plot(t_cuad3_f0_ideal,V_cuad3_f0_ideal-V_cuad3_f0_ideal_norm,'-b')
 %close
 print('/home/massimo/Escritorio/imaag/dif_cuadrada_10f0_ideal_norm.png');

